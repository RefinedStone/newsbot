name: Build and Push Docker Image to GHCR

on:
  push:
    tags:
      - 'v*.*.*'   # v1.2.3 형태로 태그 푸시하면 트리거
env:
  CHART_DIR: ./helm/newsbot

jobs:
  docker-build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 태그에서 버전 추출
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean bootJar -Pversion=${{ env.VERSION }}

      - name: Set up QEMU (for ARM64 emulation)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 레지스트리 네임스페이스를 소문자로 설정
        run: |
            # bash parameter expansion (Ubuntu 환경의 기본 shell은 bash)
            echo "REGISTRY=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Build and Push Docker image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --build-arg VERSION=${{ env.VERSION }} \
            -t ${{ env.REGISTRY }}/newsbot:${{ env.VERSION }} \
            --push .
          
      - name: Helm 배포
        run: |
          helm upgrade --install newsbot ${{ env.CHART_DIR }} \
            --set image.repository=${{ env.REGISTRY }}/newsbot \
            --set image.tag=${{ env.VERSION }}
